@page "/leavetypes/"
@using HR.LeaveManagement.UI.Contracts;
@using HR.LeaveManagement.UI.Models.LeaveTypes;

<h3>Leave Types</h3>

<div class="m-2 d-flex justify-content-end">
    <button @onclick="CreateLeaveType" class="btn btn-success">Add Leave Type</button>
</div>

@if (string.IsNullOrEmpty(Message) == false)
{
    <div class="alert alert-danger">
        @Message
    </div>
}

<div clas></div>
@if (LeaveTypes == null)
{
    <p>Loading Data...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    Id
                </th>
                <th>
                    Name
                </th>
                <th>
                    Default Days
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var leaveType in LeaveTypes)
            {
                <tr>
                    <td>@leaveType.Id </td>
                    <td>@leaveType.Name </td>
                    <td>@leaveType.DefaultDays </td>
                    <td>
                            <button class="btn btn-dark">
                                Allocate Leave
                            </button>
                            <button @onclick="@(() => EditLeaveType(leaveType.Id))" class="btn btn-warning">Edit</button>
                            <button @onclick="@(() => DeleteLeaveType(leaveType.Id+""))" class="btn btn-danger">Delete</button>
                        <button @onclick="@(() => DetailsLeaveType(leaveType.Id))" class="btn btn-info">Details</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

}

@code {
    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Inject]
    public ILeaveTypeService LeaveTypeService { get; set; }

    public List<LeaveTypeVM> LeaveTypes { get; private set; }
    public string Message { get; set; } = string.Empty;

    protected void CreateLeaveType()
    {
        NavigationManager.NavigateTo("/leavetypes/create/");
    }

    protected void AllocateLeaveType(int id)
    {
        // Use Leave Allocation Service here
    }

    protected void EditLeaveType(int id)
    {
        NavigationManager.NavigateTo($"/leavetypes/edit/{id}");
    }

    protected void DetailsLeaveType(int id)
    {
        NavigationManager.NavigateTo($"/leavetypes/details/{id}");
    }

    protected async Task DeleteLeaveType(string id)
    {
        await LeaveTypeService.DeleteLeaveType(id);
    }

    protected override async Task OnInitializedAsync()
    {
        LeaveTypes = await LeaveTypeService.GetLeaveTypes();
    }
}